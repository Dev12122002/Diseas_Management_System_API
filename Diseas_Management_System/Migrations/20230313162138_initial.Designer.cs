// <auto-generated />
using System;
using Diseas_Management_System.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Diseas_Management_System.Migrations
{
    [DbContext(typeof(DiseasContext))]
    [Migration("20230313162138_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Diseas_Management_System.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.BodyPart", b =>
                {
                    b.Property<int>("bodypartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bodypartId"));

                    b.Property<string>("bodypartName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bodypartId");

                    b.ToTable("BodyParts");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.Diseas", b =>
                {
                    b.Property<int>("diseasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("diseasId"));

                    b.Property<int>("ageRangeEnd")
                        .HasColumnType("int");

                    b.Property<int>("ageRangeStart")
                        .HasColumnType("int");

                    b.Property<float>("deathRate")
                        .HasColumnType("real");

                    b.Property<DateTime>("discoveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("diseasName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diseasSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("imageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("infectionRate")
                        .HasColumnType("real");

                    b.Property<bool>("isSelfCurable")
                        .HasColumnType("bit");

                    b.Property<string>("precautions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("recoveryTime")
                        .HasColumnType("int");

                    b.Property<string>("spreadingWays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symptoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfDiseas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typeOfInfection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vaccineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("diseasId");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.DiseasBodyPart", b =>
                {
                    b.Property<int>("diseasBodyPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("diseasBodyPartId"));

                    b.Property<int?>("bodypartId")
                        .HasColumnType("int");

                    b.Property<int?>("diseasId")
                        .HasColumnType("int");

                    b.HasKey("diseasBodyPartId");

                    b.HasIndex("bodypartId");

                    b.HasIndex("diseasId");

                    b.ToTable("DiseasBodyParts");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.DiseasMedicine", b =>
                {
                    b.Property<int>("diseasMedicineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("diseasMedicineId"));

                    b.Property<int?>("diseasId")
                        .HasColumnType("int");

                    b.Property<int?>("medicineId")
                        .HasColumnType("int");

                    b.HasKey("diseasMedicineId");

                    b.HasIndex("diseasId");

                    b.HasIndex("medicineId");

                    b.ToTable("DiseasMedicines");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.DiseasReport", b =>
                {
                    b.Property<int>("diseasReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("diseasReportId"));

                    b.Property<int?>("diseasId")
                        .HasColumnType("int");

                    b.Property<int?>("reportId")
                        .HasColumnType("int");

                    b.HasKey("diseasReportId");

                    b.HasIndex("diseasId");

                    b.HasIndex("reportId");

                    b.ToTable("DiseasReports");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.Medicine", b =>
                {
                    b.Property<int>("medicineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("medicineId"));

                    b.Property<string>("medicineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("medicineId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.Report", b =>
                {
                    b.Property<int>("reportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reportId"));

                    b.Property<string>("reportName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("reportId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.DiseasBodyPart", b =>
                {
                    b.HasOne("Diseas_Management_System.Models.BodyPart", "BodyPart")
                        .WithMany("DiseasBodyParts")
                        .HasForeignKey("bodypartId");

                    b.HasOne("Diseas_Management_System.Models.Diseas", "Diseas")
                        .WithMany("DiseasBodyParts")
                        .HasForeignKey("diseasId");

                    b.Navigation("BodyPart");

                    b.Navigation("Diseas");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.DiseasMedicine", b =>
                {
                    b.HasOne("Diseas_Management_System.Models.Diseas", "Diseas")
                        .WithMany("DiseasMedicines")
                        .HasForeignKey("diseasId");

                    b.HasOne("Diseas_Management_System.Models.Medicine", "Medicine")
                        .WithMany("DiseasMedicines")
                        .HasForeignKey("medicineId");

                    b.Navigation("Diseas");

                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.DiseasReport", b =>
                {
                    b.HasOne("Diseas_Management_System.Models.Diseas", "Diseas")
                        .WithMany("DiseasReports")
                        .HasForeignKey("diseasId");

                    b.HasOne("Diseas_Management_System.Models.Report", "Report")
                        .WithMany("ReportMedicines")
                        .HasForeignKey("reportId");

                    b.Navigation("Diseas");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.BodyPart", b =>
                {
                    b.Navigation("DiseasBodyParts");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.Diseas", b =>
                {
                    b.Navigation("DiseasBodyParts");

                    b.Navigation("DiseasMedicines");

                    b.Navigation("DiseasReports");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.Medicine", b =>
                {
                    b.Navigation("DiseasMedicines");
                });

            modelBuilder.Entity("Diseas_Management_System.Models.Report", b =>
                {
                    b.Navigation("ReportMedicines");
                });
#pragma warning restore 612, 618
        }
    }
}
